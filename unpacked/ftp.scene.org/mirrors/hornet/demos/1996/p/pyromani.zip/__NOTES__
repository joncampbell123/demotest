Why the demo failed the test:
- Demo hangs midway, some strange loop polling the timer in mode 0. EXPLANATION: The demo uses PIT 0 mode 0 for timing, meaning it writes the mode byte and counter every tick. At some point, perhaps as a bug, or perhaps as a race condition between IRQ 0 and the program code, it writes a mode byte, then three bytes: LO, HI, and LO again. It never writes the HI byte again, and the emulation stops the IRQ 0 timer tick as a result because no count was written. The demo then uses a very strange timer tick that uses INT 1Ah to read the BIOS timer count, take the least significant byte of that, then latch the counter on the 8254, read LO, then HI, discarding the LO byte, and produce for itself (TIMERLSB + LATCHMSB). The loop compares the value against a 16-bit value and will not exit until the counter meets it's criteria. But IRQ0 is not ticking, so the BIOS timer does not advance, and the loop never terminates. The loop appears to read back by issuing two latch commands one after the other, with the only difference being bit 1 (so it latches as binary then BCD and THEN reads back??)
Questions:
- The 8254 will halt counting of a timer until you write the second (HI) byte. What happens if you leave it hung like that, but then issue counter latch commands and read? Does it force the 8254 to count again? How could a demo like this happen to work on real hardware? Does INT 1Ah do anything to the PIT?

