# This is the configuration file for DOSBox 0.800. (Please use the latest version of DOSBox)
# Lines starting with a # are comment lines and are ignored by DOSBox.
# They are used to (briefly) document the effect of each option.
[dosbox]
memsize=1

[cpu]
core=normal
cputype=386
cycles=12000

[dos]
umb=false

[gus]
gus=true

[speaker]
pcspeaker=true
initial frequency=0
disney=true

[sblaster]
sbtype=sbpro2

[autoexec]
mount c: .
c:
REM ------ RUN THE DEMO -------
legend.exe

# NOTES: This demo uses some special tricks that are worth testing regularly in DOSBox-X.
#
#  - VGA "Mode X", use of VGA planar read/write modes and VGA latch storage in 256-color mode.
#
#    This is used during the rotating 3D dot objects.
#
#    The demo uses planar bit masking to write only specific bits of the 256-color pixel so
#    that it can "page flip" using the VGA PEL MASK register (3C6H)
#
#    It uses the VGA planar latch (32-bit storage area in hardware) as a way to draw pixels
#    with overdraw without clearing the entire screen constantly.
#
#    This is obscure enough that DOSBox SVN and older versions of DOSBox-X will not render it
#    correctly. It will appear as a flickering ball instead of a properly rotating object.
#    DOSBox SVN and ECE do not apply VGA planar bit masking rotation and ROP operations to
#    memory access in 256-color mode, which is why the demo effect fails.
#
#  - Use of both PIT 0 (system timer) and PIT 2 (PC speaker) as timers.
#
#    Normally PIT 2 is used to drive the PC speaker, but IBM compatible hardware allows the
#    DOS game/demo to gate off the output and silence the speaker. While gated off, the
#    counter still runs (unless the other bit, the clock gate is turned off as well).
#
#    This demo appears to use PIT 0 to run the music while using PIT 2 as an event timer (mode 0)
#    in order to keep time regardless of CPU speed. The demo cannot time, animate, or proceed
#    properly without the ability to use PIT 2 as an event timer.

